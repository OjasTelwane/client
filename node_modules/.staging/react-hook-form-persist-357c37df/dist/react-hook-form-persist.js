var react = require('react');

var useFormPersist = function useFormPersist(name, _ref, _temp) {
  var watch = _ref.watch,
      setValue = _ref.setValue;

  var _ref2 = _temp === void 0 ? {} : _temp,
      storage = _ref2.storage,
      _ref2$exclude = _ref2.exclude,
      exclude = _ref2$exclude === void 0 ? [] : _ref2$exclude,
      include = _ref2.include,
      onDataRestored = _ref2.onDataRestored,
      _ref2$validate = _ref2.validate,
      validate = _ref2$validate === void 0 ? false : _ref2$validate,
      _ref2$dirty = _ref2.dirty,
      dirty = _ref2$dirty === void 0 ? false : _ref2$dirty;

  var values = watch(include);

  var getStorage = function getStorage() {
    return storage || window.sessionStorage;
  };

  react.useEffect(function () {
    var str = getStorage().getItem(name);

    if (str) {
      var _values = JSON.parse(str);

      var dataRestored = {};
      Object.keys(_values).forEach(function (key) {
        var shouldSet = !exclude.includes(key);

        if (shouldSet) {
          dataRestored[key] = _values[key];
          setValue(key, _values[key], {
            shouldValidate: validate,
            shouldDirty: dirty
          });
        }
      });

      if (onDataRestored) {
        onDataRestored(dataRestored);
      }
    }
  }, [name]);
  react.useEffect(function () {
    getStorage().setItem(name, JSON.stringify(values));
  });
  return {
    clear: function clear() {
      return getStorage().removeItem(name);
    }
  };
};

module.exports = useFormPersist;
